name: harmonyos
on:
  push:
    branches:
      - master

env:
  DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer
  IOS_DEPLOYMENT_TARGET: '13.0'
  MAC_DEPLOYMENT_TARGET: '11.0'
  MAC_CATALYST_DEPLOYMENT_TARGET: '13.1'
  WATCHOS_DEPLOYMENT_TARGET: '6.0'
  TVOS_DEPLOYMENT_TARGET: '11.0'
  VISIONOS_DEPLOYMENT_TARGET: '1.0'
  ENABLE_BITCODE: OFF
  ENABLE_ARC: OFF
  ENABLE_VISIBILITY: OFF
  EMSCRIPTEN_VERSION: 3.1.28

permissions:
  contents: read

jobs:
  harmonyos:
    runs-on: ubuntu-latest
    env:
      OHOS_NDK_CMAKE: ${{ github.workspace }}/ohos-sdk/linux/native/build-tools/cmake/bin/cmake
      COMMON_CMAKE_OPTIONS: |
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/ohos-sdk/linux/native/build/cmake/ohos.toolchain.cmake \
        -DCMAKE_INSTALL_PREFIX=install \
        -DCMAKE_BUILD_TYPE=Release
    steps:
      - uses: actions/checkout@v4

      - name: Download OHOS SDK
        run: |
          wget https://repo.huaweicloud.com/harmonyos/os/4.0-Release/ohos-sdk-windows_linux-public.tar.gz
          tar -xf ohos-sdk-windows_linux-public.tar.gz
          cd ohos-sdk/linux
          unzip -q native-linux-x64-4.0.10.13-Release.zip
      
      - name: Build for armeabi-v7a
        run: |
          mkdir build-armeabi-v7a && cd build-armeabi-v7a
          ${{ env.OHOS_NDK_CMAKE }} ${{ env.COMMON_CMAKE_OPTIONS }} -DOHOS_ARCH="armeabi-v7a" ${{ github.workspace }}
          ${{ env.OHOS_NDK_CMAKE }} --build . -j $(nproc)
          ${{ env.OHOS_NDK_CMAKE }} --build . --target install
          cd ..

      - name: Build for arm64-v8a
        run: |
          mkdir build-arm64-v8a && cd build-arm64-v8a
          ${{ env.OHOS_NDK_CMAKE }} ${{ env.COMMON_CMAKE_OPTIONS }} -DOHOS_ARCH="arm64-v8a" ${{ github.workspace }}
          ${{ env.OHOS_NDK_CMAKE }} --build . -j $(nproc)
          ${{ env.OHOS_NDK_CMAKE }} --build . --target install
          cd ..

      - name: Build for x86_64
        run: |
          mkdir build-x86_64 && cd build-x86_64
          ${{ env.OHOS_NDK_CMAKE }} ${{ env.COMMON_CMAKE_OPTIONS }} -DOHOS_ARCH="x86_64" ${{ github.workspace }}
          ${{ env.OHOS_NDK_CMAKE }} --build . -j $(nproc)
          ${{ env.OHOS_NDK_CMAKE }} --build . --target install
          cd ..

      - name: Package
        run: |
          mkdir -p ncnn-package/x86_64 ncnn-package/armeabi-v7a ncnn-package/arm64-v8a
          cp -rf build-x86_64/install/* ncnn-package/x86_64/
          cp -rf build-armeabi-v7a/install/* ncnn-package/armeabi-v7a/
          cp -rf build-arm64-v8a/install/* ncnn-package/arm64-v8a/
          zip -r ncnn-package.zip ncnn-package

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: ncnn-package
          path: ncnn-package.zip
